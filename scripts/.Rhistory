Species = LETTERS[1:12],
Quadrat = c(1:12),
Nest = c(sample(1:4, size = 12, replace= T))
)
Quadrat = c(seq(1:12, each = 10),
data.frame(
Species = LETTERS[1:12],
Quadrat = seq(1:12, each = 10),
Nest = c(sample(1:4, size = 12, replace= T))
)
sample(1:4, size = 10, replace= T)
data.frame(
Species = LETTERS[1:12],
Quadrat = seq(1:12, each = 10),
Nest = c(sample(1:4, size = 12, replace= T))
)
data.frame(
Species = LETTERS[1:12],
Quadrat = seq(1:12, each = 10),
Nest = c(sample(1:4, size = 120, replace= T))
)
data.frame(
Species = LETTERS[1:12],
Quadrat = seq(1:12, each = 10),
Nest = c(sample(0:4, size = 120, replace= T))
)
seq(1:12, each = 10)
?seq
data.frame(
Species = LETTERS[1:12],
Quadrat = rep(1:12, each = 10),
Nest = c(sample(0:4, size = 120, replace= T))
)
data.frame(
Species = rep(LETTERS[1:12], each = 10),
Quadrat = rep(1:12, each = 10),
Nest = c(sample(0:4, size = 120, replace= T))
)
data.frame(
Species = rep(LETTERS[1:12], each = 12),
Quadrat = rep(1:12, each = 12),
Nest = c(sample(0:4, size = 120, replace= T))
)
data.frame(
Species = rep(LETTERS[1:12], each = 12),
Quadrat = rep(1:12, each = 12),
Nest = c(sample(0:4, size = 144, replace= T))
)
data.frame(
Species = rep(LETTERS[1:10], each = 12),
Quadrat = rep(1:12, each = 12),
Nest = c(sample(0:4, size = 102, replace= T))
)
data.frame(
Species = rep(LETTERS[1:10], each = 12),
Quadrat = rep(1:12, each = 12),
Nest = c(sample(0:4, size = 120, replace= T))
)
data.frame(
Species = rep(LETTERS[1:10], each = 10),
Quadrat = rep(1:12, each = 12),
Nest = c(sample(0:4, size = 120, replace= T))
)
data.frame(
Species = rep(LETTERS[1:10], each = 12),
Quadrat = rep(1:12, each = 12),
Nest = c(sample(0:4, size = 120, replace= T))
)
data.frame(
Species = rep(LETTERS[1:10], each = 12),
Quadrat = rep(1:12, each = 12),
Nest = c(sample(0:4, size = 144, replace= T))
)
rep(LETTERS[1:10], each = 12)
rep(1:12, each = 12)
data.frame(
Species = rep(LETTERS[1:10], each = 12),
Quadrat = rep(1:12, each = 12),
Nest = c(sample(0:4, size = 144, replace= T))
)
rep(LETTERS[1:10], each = 12)
LETTERS[1:10]
rep(LETTERS[1:10], each = 12)
sample(0:4, size = 144, replace= T)
data.frame(
Species = rep(LETTERS[1:10], each = 12),
Quadrat = rep(1:12, each = 10),
Nest = sample(0:4, size = 144, replace= T)
)
data.frame(
Species = rep(LETTERS[1:10], each = 12),
Quadrat = rep(1:12, each = 10),
Nest = sample(0:4, size = 120, replace= T)
)
data.frame(
Species = rep(LETTERS[1:10], each = 12),
Quadrat = rep(1:12, times = 10),
Nest = sample(0:4, size = 120, replace= T)
)
data.frame(
Species = rep(LETTERS[1:10], each = 12),
Quadrat = rep(1:12, times = 10),
Nest = sample(0:4, size = 120, replace= T)
) |>
dplyr::group_by(Species) |>
dplyr::tally(Nest)
data.frame(
Species = rep(LETTERS[1:10], each = 12),
Quadrat = rep(1:12, times = 10),
Nest = sample(0:4, size = 120, replace= T)
) |>
dplyr::group_by(Species) |>
dplyr::count(Nest)
data.frame(
Species = rep(LETTERS[1:10], each = 12),
Quadrat = rep(1:12, times = 10),
Nest = sample(0:4, size = 120, replace= T)
) |>
dplyr::group_by(Species) |>
dplyr::mutate(n = count(Nest))
data.frame(
Species = rep(LETTERS[1:10], each = 12),
Quadrat = rep(1:12, times = 10),
Nest = sample(0:4, size = 120, replace= T)
) |>
dplyr::group_by(Species) |>
dplyr::mutate(n = n(Nest))
data.frame(
Species = rep(LETTERS[1:10], each = 12),
Quadrat = rep(1:12, times = 10),
Nest = sample(0:4, size = 120, replace= T)
) |>
dplyr::group_by(Species) |>
dplyr::mutate(ea = n(Nest))
data.frame(
Species = rep(LETTERS[1:10], each = 12),
Quadrat = rep(1:12, times = 10),
Nest = sample(0:4, size = 120, replace= T)
) |>
dplyr::group_by(Species) |>
dplyr::count(Nest) |>
ssample(1:4, size = 10, replace= T)
data.frame(
Species = rep(LETTERS[1:10], each = 12),
Quadrat = rep(1:12, times = 10),
Nest = sample(0:4, size = 120, replace= T)
) |>
dplyr::group_by(Species) |>
dplyr::count(Nest)
?count
data.frame(
Species = rep(LETTERS[1:10], each = 12),
Quadrat = rep(1:12, times = 10),
Nest = sample(0:4, size = 120, replace= T)
) |>
dplyr::group_by(Species) |>
dplyr::count(Nest)
data.frame(
Species = rep(LETTERS[1:10], each = 12),
Quadrat = rep(1:12, times = 10),
Nest = sample(0:4, size = 120, replace= T)
) |>
dplyr::group_by(Species) |>
dplyr::count(Nest) |>
dplyr::mutate(Nest = Nest/12)
data.frame(
Species = rep(LETTERS[1:10], each = 12),
Quadrat = rep(1:12, times = 10),
Nest = sample(0:4, size = 120, replace= T)
) |>
dplyr::group_by(Species) |>
dplyr::count(Nest) |>
dplyr::mutate(n = Nest/12)
data.frame(
Species = rep(LETTERS[1:10], each = 12),
Quadrat = rep(1:12, times = 10),
Nest = sample(0:4, size = 120, replace= T)
) |>
dplyr::group_by(Species) |>
dplyr::count(Nest) |>
dplyr::group_by(Species) |>
dplyr::mutate(n = Nest/12)
data.frame(
Species = rep(LETTERS[1:10], each = 12),
Quadrat = rep(1:12, times = 10),
Nest = sample(0:4, size = 120, replace= T)
) |>
dplyr::group_by(Species) |>
dplyr::count(Nest) |>
dplyr::group_by(Species) |>
dplyr::mutate(n = n/12)
data.frame(
Species = rep(LETTERS[1:10], each = 12),
Quadrat = rep(1:12, times = 10),
Nest = sample(0:4, size = 120, replace= T)
) |>
dplyr::group_by(Species) |>
dplyr::count(Nest) |>
dplyr::group_by(Species) |>
dplyr::mutate(n = n/12) |>
filter(n > 0.2 & n < 0.8)
data.frame(
Species = rep(LETTERS[1:10], each = 12),
Quadrat = rep(1:12, times = 10),
Nest = sample(0:4, size = 120, replace= T)
) |>
dplyr::group_by(Species) |>
dplyr::count(Nest) |>
dplyr::group_by(Species) |>
dplyr::mutate(n = n/12) |>
filter(n > 0.2 & n < 0.8) |>
filter(which.max(n))
data.frame(
Species = rep(LETTERS[1:10], each = 12),
Quadrat = rep(1:12, times = 10),
Nest = sample(0:4, size = 120, replace= T)
) |>
dplyr::group_by(Species) |>
dplyr::count(Nest) |>
dplyr::group_by(Species) |>
dplyr::mutate(n = n/12) |>
filter(n > 0.2 & n < 0.8) |>
filter(max(n))
data.frame(
Species = rep(LETTERS[1:10], each = 12),
Quadrat = rep(1:12, times = 10),
Nest = sample(0:4, size = 120, replace= T)
) |>
dplyr::group_by(Species) |>
dplyr::count(Nest) |>
dplyr::group_by(Species) |>
dplyr::mutate(n = n/12) |>
filter(n > 0.2 & n < 0.8) |>
filter(n ==max(n))
data.frame(
Species = rep(LETTERS[1:10], each = 12),
Quadrat = rep(1:12, times = 10),
Nest = sample(0:4, size = 120, replace= T)
) |>
dplyr::group_by(Species) |>
dplyr::count(Nest) |>
dplyr::group_by(Species) |>
dplyr::mutate(n = n/12) |>
filter(Nest > 0, n > 0.2 & n < 0.8) |>
filter(n == max(n))
data.frame(
Species = rep(LETTERS[1:10], each = 12),
Quadrat = rep(1:12, times = 10),
Nest = sample(0:4, size = 120, replace= T)
) |>
dplyr::group_by(Species) |>
dplyr::count(Nest) |>
dplyr::group_by(Species) |>
dplyr::mutate(n = n/12) |>
filter(Nest > 0, n > 0.2 & n < 0.8) |>
filter(n == max(n)) |>
arrange(Nest) |>
slice_min(n = 1)
data.frame(
Species = rep(LETTERS[1:10], each = 12),
Quadrat = rep(1:12, times = 10),
Nest = sample(0:4, size = 120, replace= T)
) |>
dplyr::group_by(Species) |>
dplyr::count(Nest) |>
dplyr::group_by(Species) |>
dplyr::mutate(n = n/12) |>
filter(Nest > 0, n > 0.2 & n < 0.8) |>
filter(n == max(n)) |>
arrange(Nest) |>
slice_min(n = 1, order_by = Nest)
data.frame(
Species = rep(LETTERS[1:10], each = 12),
Quadrat = rep(1:12, times = 10),
Nest = sample(0:4, size = 120, replace= T)
) |>
dplyr::group_by(Species) |>
dplyr::count(Nest) |> # count how many times each species was found in a nest level
dplyr::group_by(Species) |>
dplyr::mutate(n = n/max(Nest)) |> # divide the
filter(Nest > 0, n > 0.2 & n < 0.8) |>
filter(n == max(n)) |>
slice_min(n = 1, order_by = Nest)
data.frame(
Species = rep(LETTERS[1:10], each = 12),
Quadrat = rep(1:12, times = 10),
Nest = sample(0:4, size = 120, replace= T)
) |>
dplyr::group_by(Species) |>
dplyr::count(Nest) |> # count how many times each species was found in a nest level
dplyr::group_by(Species) |>
dplyr::mutate(n = n/max(Nest))# |> # divide the
data.frame(
Species = rep(LETTERS[1:10], each = 12),
Quadrat = rep(1:12, times = 10),
Nest = sample(0:4, size = 120, replace= T)
) |>
dplyr::group_by(Species) |>
dplyr::count(Nest) |> # count how many times each species was found in a nest level
dplyr::group_by(Species) |>
dplyr::mutate(n = n/max(Quadrat))# |> # divide the
data.frame(
Species = rep(LETTERS[1:10], each = 12),
Quadrat = rep(1:12, times = 10),
Nest = sample(0:4, size = 120, replace= T)
) |>
dplyr::group_by(Species) |>
dplyr::count(Nest) |> # count how many times each species was found in a nest level
dplyr::group_by(Species) |>
dplyr::mutate(n = n/12) # |> # divide the
0.8-0.2
abs(-0.5)
data.frame(
Species = rep(LETTERS[1:10], each = 12),
Quadrat = rep(1:12, times = 10),
Nest = sample(0:4, size = 120, replace= T)
) |>
dplyr::group_by(Species) |>
dplyr::count(Nest) |> # count how many times each species was found in a nest level
dplyr::group_by(Species) |>
dplyr::mutate(n = n/12) |> # divide the number of observations by the number of plots sampled. .
filter(Nest > 0, n > 0.2 & n < 0.8) |> # we want the plants to show up in from 0.2-0.8 of nests.
# if we have more than one Nest size which meets the standard, than let's choose
# the one closest to midpoint 0.5, allowing the plants to decrease or increase
mutate(difference = if_else(n < 0.5, 0.5 - n, n - 0.5))
slice_min(n = 1, order_by = difference)
data.frame(
Species = rep(LETTERS[1:10], each = 12),
Quadrat = rep(1:12, times = 10),
Nest = sample(0:4, size = 120, replace= T)
) |>
dplyr::group_by(Species) |>
dplyr::count(Nest) |> # count how many times each species was found in a nest level
dplyr::group_by(Species) |>
dplyr::mutate(n = n/12) |> # divide the number of observations by the number of plots sampled. .
filter(Nest > 0, n > 0.2 & n < 0.8) |> # we want the plants to show up in from 0.2-0.8 of nests.
# if we have more than one Nest size which meets the standard, than let's choose
# the one closest to midpoint 0.5, allowing the plants to decrease or increase
mutate(difference = if_else(n < 0.5, 0.5 - n, n - 0.5)) |>
slice_min(n = 1, order_by = difference)
data.frame(
Species = rep(LETTERS[1:10], each = 12),
Quadrat = rep(1:12, times = 10),
Nest = sample(0:4, size = 120, replace= T)
) |>
dplyr::group_by(Species) |>
dplyr::count(Nest) |> # count how many times each species was found in a nest level
dplyr::group_by(Species) |>
dplyr::mutate(n = n/12) |> # divide the number of observations by the number of plots sampled. .
filter(Nest > 0, n > 0.2 & n < 0.8) |> # we want the plants to show up in from 0.2-0.8 of nests.
# if we have more than one Nest size which meets the standard, than let's choose
# the one closest to midpoint 0.5, allowing the plants to decrease or increase
mutate(difference = if_else(n < 0.5, 0.5 - n, n - 0.5)) |>
slice_min(n = 1, order_by = difference, Nest)
?slice_min
data.frame(
Species = rep(LETTERS[1:10], each = 12),
Quadrat = rep(1:12, times = 10),
Nest = sample(0:4, size = 120, replace= T)
) |>
dplyr::group_by(Species) |>
dplyr::count(Nest) |> # count how many times each species was found in a nest level
dplyr::group_by(Species) |>
dplyr::mutate(n = n/12) |> # divide the number of observations by the number of plots sampled. .
filter(Nest > 0, n > 0.2 & n < 0.8) |> # we want the plants to show up in from 0.2-0.8 of nests.
# if we have more than one Nest size which meets the standard, than let's choose
# the one closest to midpoint 0.5, allowing the plants to decrease or increase
mutate(difference = if_else(n < 0.5, 0.5 - n, n - 0.5)) |>
slice_min(n = 1, order_by = c('difference', 'Nest'))
data.frame(
Species = rep(LETTERS[1:10], each = 12),
Quadrat = rep(1:12, times = 10),
Nest = sample(0:4, size = 120, replace= T)
) |>
dplyr::group_by(Species) |>
dplyr::count(Nest) |> # count how many times each species was found in a nest level
dplyr::group_by(Species) |>
dplyr::mutate(n = n/12) |> # divide the number of observations by the number of plots sampled. .
filter(Nest > 0, n > 0.2 & n < 0.8) |> # we want the plants to show up in from 0.2-0.8 of nests.
# if we have more than one Nest size which meets the standard, than let's choose
# the one closest to midpoint 0.5, allowing the plants to decrease or increase
mutate(difference = if_else(n < 0.5, 0.5 - n, n - 0.5)) |>
slice_min(n = 1, order_by = c(difference, Nest))
data.frame(
Species = rep(LETTERS[1:10], each = 12),
Quadrat = rep(1:12, times = 10),
Nest = sample(0:4, size = 120, replace= T)
) |>
dplyr::group_by(Species) |>
dplyr::count(Nest) |> # count how many times each species was found in a nest level
dplyr::group_by(Species) |>
dplyr::mutate(n = n/12) |> # divide the number of observations by the number of plots sampled. .
filter(Nest > 0, n > 0.2 & n < 0.8) |> # we want the plants to show up in from 0.2-0.8 of nests.
# if we have more than one Nest size which meets the standard, than let's choose
# the one closest to midpoint 0.5, allowing the plants to decrease or increase
mutate(difference = if_else(n < 0.5, 0.5 - n, n - 0.5)) |>
slice_min(n = 1, order_by = difference)
data.frame(
Species = rep(LETTERS[1:10], each = 12),
Quadrat = rep(1:12, times = 10),
Nest = sample(0:4, size = 120, replace= T)
) |>
dplyr::group_by(Species) |>
dplyr::count(Nest) |> # count how many times each species was found in a nest level
dplyr::group_by(Species) |>
dplyr::mutate(n = n/12) |> # divide the number of observations by the number of plots sampled. .
filter(Nest > 0, n > 0.2 & n < 0.8) |> # we want the plants to show up in from 0.2-0.8 of nests.
# if we have more than one Nest size which meets the standard, than let's choose
# the one closest to midpoint 0.5, allowing the plants to decrease or increase
mutate(difference = if_else(n < 0.5, 0.5 - n, n - 0.5)) |>
slice_min(n = 1, order_by = difference) |>
# finally if a tie happens than we select the smaller nest
slice_min(n = 1, order_by = Nest)
data.frame(
Species = rep(LETTERS[1:10], each = 12),
Quadrat = rep(1:12, times = 10),
Nest = sample(0:4, size = 120, replace= T)
) |>
dplyr::group_by(Species) |>
dplyr::count(Nest) |> # count how many times each species was found in a nest level
dplyr::group_by(Species) |>
dplyr::mutate(n = n/12) |> # divide the number of observations by the number of plots sampled. .
filter(Nest > 0, n > 0.2 & n < 0.8) |> # we want the plants to show up in from 0.2-0.8 of nests.
# if we have more than one Nest size which meets the standard, than let's choose
# the one closest to midpoint 0.5, allowing the plants to decrease or increase
mutate(difference = if_else(n < 0.5, 0.5 - n, n - 0.5)) |>
slice_min(n = 1, order_by = difference) |>
group_by(Species) |>
# finally if a tie happens than we select the smaller nest
slice_min(n = 1, order_by = Nest)
data.frame(
Species = rep(LETTERS[1:10], each = 12),
Quadrat = rep(1:12, times = 10),
Nest = sample(0:4, size = 120, replace= T)
) |>
dplyr::group_by(Species) |>
dplyr::count(Nest) |> # count how many times each species was found in a nest level
dplyr::group_by(Species) |>
dplyr::mutate(n = n/12) |> # divide the number of observations by the number of plots sampled. .
filter(Nest > 0, n > 0.2 & n < 0.8) |> # we want the plants to show up in from 0.2-0.8 of nests.
# if we have more than one Nest size which meets the standard, than let's choose
# the one closest to midpoint 0.5, allowing the plants to decrease or increase
mutate(difference = if_else(n < 0.5, 0.5 - n, n - 0.5)) |>
slice_min(n = 1, order_by = difference, with_ties = F)
data.frame(
Species = rep(LETTERS[1:10], each = 12),
Quadrat = rep(1:12, times = 10),
Nest = sample(0:4, size = 120, replace= T)
) |>
dplyr::group_by(Species) |>
dplyr::count(Nest) |> # count how many times each species was found in a nest level
dplyr::group_by(Species) |>
dplyr::mutate(n = n/12) |> # divide the number of observations by the number of plots sampled. .
filter(Nest > 0, n > 0.2 & n < 0.8) |> # we want the plants to show up in from 0.2-0.8 of nests.
# if we have more than one Nest size which meets the standard, than let's choose
# the one closest to midpoint 0.5, allowing the plants to decrease or increase
mutate(difference = if_else(n < 0.5, 0.5 - n, n - 0.5),
n = round(n, digits = 2)) |>
slice_min(n = 1, order_by = difference, with_ties = F) |>
select(Species, Nest, n)
data.frame(
Species = rep(LETTERS[1:10], each = 12),
Quadrat = rep(1:12, times = 10),
Nest = sample(0:4, size = 120, replace= T)
) |>
dplyr::group_by(Species) |>
dplyr::count(Nest) |> # count how many times each species was found in a nest level
dplyr::group_by(Species) |>
dplyr::mutate(n = n/12) |> # divide the number of observations by the number of plots sampled. .
filter(Nest > 0, n > 0.2 & n < 0.8) |> # we want the plants to show up in from 0.2-0.8 of nests.
# if we have more than one Nest size which meets the standard, than let's choose
# the one closest to midpoint 0.5, allowing the plants to decrease or increase
mutate(difference = if_else(n < 0.5, 0.5 - n, n - 0.5),
n = round(n, digits = 2)) |>
slice_min(n = 1, order_by = difference, with_ties = F) |>
select(Species, Nest, Frequency = n)
data.frame(
Species = rep(LETTERS[1:10], each = 12),
Quadrat = rep(1:12, times = 10),
Nest = sample(0:4, size = 120, replace= T)
) |>
dplyr::group_by(Species) |>
dplyr::count(Nest) |> # count how many times each species was found in a nest level
dplyr::group_by(Species) |>
dplyr::mutate(n = n/12) |> # divide the number of observations by the number of plots sampled. .
filter(Nest > 0, n > 0.2 & n < 0.8) |> # we want the plants to show up in from 0.2-0.8 of nests.
# if we have more than one Nest size which meets the standard, than let's choose
# the one closest to midpoint 0.5, allowing the plants to decrease or increase
mutate(difference = if_else(n < 0.5, 0.5 - n, n - 0.5),
n = round(n, digits = 2)) |>
slice_min(n = 1, order_by = difference, with_ties = F) |>
select(Species, Nest, Frequency = n) |>
knitr::kbl() |>
kableExtra::kable_classic(full_width = F, html_font = "Cambria")
data.frame(
Species = rep(LETTERS[1:10], each = 12),
Quadrat = rep(1:12, times = 10),
Nest = sample(0:4, size = 120, replace= T)
) |>
dplyr::group_by(Species) |>
dplyr::count(Nest) |> # count how many times each species was found in a nest level
dplyr::group_by(Species) |>
dplyr::mutate(n = n/12) |> # divide the number of observations by the number of plots sampled. .
filter(Nest > 0, n > 0.2 & n < 0.8) |> # we want the plants to show up in from 0.2-0.8 of nests.
# if we have more than one Nest size which meets the standard, than let's choose
# the one closest to midpoint 0.5, allowing the plants to decrease or increase
mutate(difference = if_else(n < 0.5, 0.5 - n, n - 0.5),
n = round(n, digits = 2)) |>
slice_min(n = 1, order_by = difference, with_ties = F) |>
select(Species, Nest, Frequency = n) |>
kableExtra::kbl() |>
kableExtra::kable_classic(full_width = F, html_font = "Cambria")
