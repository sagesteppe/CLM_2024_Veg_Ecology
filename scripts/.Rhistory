filter(dose < 2) %>%
mutate(dose = as.factor(dose))
View(tg)
fqi_p <- wilcox_test(c_vals, FQI ~ Site, paired = FALSE)
c_vals <- data %>%
group_by(Quadrat) %>%
mutate(
Mcoc = mcoc(C),
FQI = fqi(C),
Site = as.factor(Site),
) %>%
distinct(Site, Quadrat, .keep_all = T) %>%
select(Site, Quadrat, Mcoc, FQI)
fqi_p <- wilcox_test(c_vals, FQI ~ Site, paired = FALSE)
FQI ~ Site
head(c_vals)
?wilcox.test
?wilcox_test
fqi_p <- wilcox_test(c_vals, FQI ~ Site, paired = FALSE, conf.level = 0.8)
fqi_p <- wilcox_test(c_vals, FQI ~ Site, paired = FALSE, conf.level = 0.1)
?wilcox.test
data.frame(
Species = rep(LETTERS[1:10], each = 12),
Quadrat = rep(1:12, times = 10),
Nest = sample(0:4, size = 120, replace= T)
) |>
dplyr::group_by(Species) |>
dplyr::count(Nest) |> # count how many times each species was found in a nest level
dplyr::group_by(Species) |>
dplyr::mutate(n = n/12) |> # divide the number of observations by the number of plots sampled. .
filter(Nest > 0, n > 0.2 & n < 0.8) |> # we want the plants to show up in from 0.2-0.8 of nests.
# if we have more than one Nest size which meets the standard, than let's choose
# the one closest to midpoint 0.5, allowing the plants to decrease or increase
mutate(difference = if_else(n < 0.5, 0.5 - n, n - 0.5),
n = round(n, digits = 2)) |>
slice_min(n = 1, order_by = difference, with_ties = F) |>
select(Species, Nest, Frequency = n) |>
kableExtra::kbl() |>
kableExtra::kable_classic(full_width = F, html_font = "Cambria")
data |>
dplyr::ungroup() |>
dplyr::group_by(Species) |>
dplyr::count(Nest) |> # count how many times each species was found in a nest level
dplyr::group_by(Species) |>
dplyr::mutate(n = n/12) |> # divide the number of observations by the number of plots sampled. .
filter(Nest > 0, n > 0.2 & n < 0.8) |> # we want the plants to show up in from 0.2-0.8 of nests.
# if we have more than one Nest size which meets the standard, than let's choose
# the one closest to midpoint 0.5, allowing the plants to decrease or increase
mutate(difference = if_else(n < 0.5, 0.5 - n, n - 0.5),
n = round(n, digits = 2)) |>
slice_min(n = 1, order_by = difference, with_ties = F) |>
select(Species, Nest, Frequency = n) |>
kableExtra::kbl() |>
kableExtra::kable_classic(full_width = F, html_font = "Cambria")
View(data)
data |>
dplyr::ungroup() |>
dplyr::group_by(Species) |>
dplyr::count(Nest) |> # count how many times each species was found in a nest level
dplyr::group_by(Species) |>
dplyr::mutate(n = n/ max(Quadrat)) |> # divide the number of observations by the number of plots sampled. .
filter(Nest > 0, n > 0.2 & n < 0.8) |> # we want the plants to show up in from 0.2-0.8 of nests.
# if we have more than one Nest size which meets the standard, than let's choose
# the one closest to midpoint 0.5, allowing the plants to decrease or increase
mutate(difference = if_else(n < 0.5, 0.5 - n, n - 0.5),
n = round(n, digits = 2)) |>
slice_min(n = 1, order_by = difference, with_ties = F) |>
select(Species, Nest, Frequency = n) |>
kableExtra::kbl() |>
kableExtra::kable_classic(full_width = F, html_font = "Cambria")
data |>
dplyr::ungroup() |>
dplyr::group_by(Species) |>
dplyr::count(Nest) |> # count how many times each species was found in a nest level
dplyr::group_by(Species) |>
dplyr::mutate(n = n/ max(Quadrat))# |> # divide the number of observations by the number of plots sampled. .
data |>
dplyr::ungroup() |>
dplyr::group_by(Species) |>
dplyr::count(Nest) |> # count how many times each species was found in a nest level
dplyr::group_by(Species) |>
dplyr::mutate(n = n/ max(.$Quadrat))# |> # divide the number of observations by the number of plots sampled. .
max(.$Quadrat)
data |>
dplyr::ungroup() |>
dplyr::group_by(Species) |>
dplyr::count(Nest) |> # count how many times each species was found in a nest level
dplyr::group_by(Species) |>
dplyr::mutate(n = n/9)# |> # divide the number of observations by the number of plots sampled. .
data |>
dplyr::ungroup() |>
dplyr::group_by(Species) |>
dplyr::count(Nest) |> # count how many times each species was found in a nest level
dplyr::group_by(Species) |>
dplyr::mutate(n = n/9) |> # divide the number of observations by the number of plots sampled. .
filter(Nest > 0, n > 0.2 & n < 0.8) |> # we want the plants to show up in from 0.2-0.8 of nests.
# if we have more than one Nest size which meets the standard, than let's choose
# the one closest to midpoint 0.5, allowing the plants to decrease or increase
mutate(difference = if_else(n < 0.5, 0.5 - n, n - 0.5),
n = round(n, digits = 2)) |>
slice_min(n = 1, order_by = difference, with_ties = F) |>
select(Species, Nest, Frequency = n) |>
kableExtra::kbl() |>
kableExtra::kable_classic(full_width = F, html_font = "Cambria")
View(data)
data |>
dplyr::filter(Nest <= 4) |>
dplyr::ungroup() |>
dplyr::group_by(Species) |>
dplyr::count(Nest) |> # count how many times each species was found in a nest level
dplyr::group_by(Species) |>
dplyr::mutate(n = n/9) |> # divide the number of observations by the number of plots sampled. .
filter(Nest > 0, n > 0.2 & n < 0.8) |> # we want the plants to show up in from 0.2-0.8 of nests.
# if we have more than one Nest size which meets the standard, than let's choose
# the one closest to midpoint 0.5, allowing the plants to decrease or increase
mutate(difference = if_else(n < 0.5, 0.5 - n, n - 0.5),
n = round(n, digits = 2)) |>
slice_min(n = 1, order_by = difference, with_ties = F) |>
select(Species, Nest, Frequency = n) |>
kableExtra::kbl() |>
kableExtra::kable_classic(full_width = F, html_font = "Cambria")
data |>
dplyr::filter(Nest <= 4) |>
dplyr::ungroup() |>
dplyr::group_by(Species) |>
dplyr::count(Nest) |> # count how many times each species was found in a nest level
dplyr::group_by(Species) |>
dplyr::mutate(n = n/9) |> # divide the number of observations by the number of plots sampled. .
filter(Nest > 0, n > 0.2 & n < 0.8) |> # we want the plants to show up in from 0.2-0.8 of nests.
# if we have more than one Nest size which meets the standard, than let's choose
# the one closest to midpoint 0.5, allowing the plants to decrease or increase
mutate(difference = if_else(n < 0.5, 0.5 - n, n - 0.5),
n = round(n, digits = 2)) |>
slice_min(n = 1, order_by = difference, with_ties = F) |>
# now just reduce number of species to a sensible amount for visualizing
arrange(Frequency, Species)
data |>
dplyr::filter(Nest <= 4) |>
dplyr::ungroup() |>
dplyr::group_by(Species) |>
dplyr::count(Nest) |> # count how many times each species was found in a nest level
dplyr::group_by(Species) |>
dplyr::mutate(n = n/9) |> # divide the number of observations by the number of plots sampled. .
filter(Nest > 0, n > 0.2 & n < 0.8) |> # we want the plants to show up in from 0.2-0.8 of nests.
# if we have more than one Nest size which meets the standard, than let's choose
# the one closest to midpoint 0.5, allowing the plants to decrease or increase
mutate(difference = if_else(n < 0.5, 0.5 - n, n - 0.5),
n = round(n, digits = 2)) |>
slice_min(n = 1, order_by = difference, with_ties = F) |>
# now just reduce number of species to a sensible amount for visualizing
arrange(n, Species)
data |>
dplyr::filter(Nest <= 4) |>
dplyr::ungroup() |>
dplyr::group_by(Species) |>
dplyr::count(Nest) |> # count how many times each species was found in a nest level
dplyr::group_by(Species) |>
dplyr::mutate(n = n/9) |> # divide the number of observations by the number of plots sampled. .
filter(Nest > 0, n > 0.2 & n < 0.8) |> # we want the plants to show up in from 0.2-0.8 of nests.
# if we have more than one Nest size which meets the standard, than let's choose
# the one closest to midpoint 0.5, allowing the plants to decrease or increase
mutate(difference = if_else(n < 0.5, 0.5 - n, n - 0.5),
n = round(n, digits = 2)) |>
slice_min(n = 1, order_by = difference, with_ties = F) |>
# now just reduce number of species to a sensible amount for visualizing
arrange(-n, Species)
data |>
dplyr::filter(Nest <= 4) |>
dplyr::ungroup() |>
dplyr::group_by(Species) |>
dplyr::count(Nest) |> # count how many times each species was found in a nest level
dplyr::group_by(Species) |>
dplyr::mutate(n = n/9) |> # divide the number of observations by the number of plots sampled. .
filter(Nest > 0, n > 0.2 & n < 0.8) |> # we want the plants to show up in from 0.2-0.8 of nests.
# if we have more than one Nest size which meets the standard, than let's choose
# the one closest to midpoint 0.5, allowing the plants to decrease or increase
dplyr::mutate(difference = dplyr::if_else(n < 0.5, 0.5 - n, n - 0.5),
n = round(n, digits = 2)) |>
dplyr::slice_min(n = 1, order_by = difference, with_ties = F) |>
# now just reduce number of species to a sensible amount for visualizing
dplyr::arrange(-n, Species) |>
head()
data |>
dplyr::filter(Nest <= 4) |>
dplyr::ungroup() |>
dplyr::group_by(Species) |>
dplyr::count(Nest) |> # count how many times each species was found in a nest level
dplyr::group_by(Species) |>
dplyr::mutate(n = n/9) |> # divide the number of observations by the number of plots sampled. .
filter(Nest > 0, n > 0.2 & n < 0.8) |> # we want the plants to show up in from 0.2-0.8 of nests.
# if we have more than one Nest size which meets the standard, than let's choose
# the one closest to midpoint 0.5, allowing the plants to decrease or increase
dplyr::mutate(difference = dplyr::if_else(n < 0.5, 0.5 - n, n - 0.5),
n = round(n, digits = 2)) |>
dplyr::slice_min(n = 1, order_by = difference, with_ties = F) |>
# now just reduce number of species to a sensible amount for visualizing
dplyr::arrange(-n, Species) |>
head() |>
select(Species, Nest, Frequency = n) |>
kableExtra::kbl() |>
kableExtra::kable_classic(full_width = F, html_font = "Cambria")
data |>
dplyr::filter(Nest <= 4) |>
dplyr::ungroup() |>
dplyr::group_by(Species) |>
dplyr::count(Nest) |> # count how many times each species was found in a nest level
dplyr::group_by(Species) |>
dplyr::mutate(n = n/9) |> # divide the number of observations by the number of plots sampled. .
filter(Nest > 0, n > 0.2 & n < 0.8) |> # we want the plants to show up in from 0.2-0.8 of nests.
# if we have more than one Nest size which meets the standard, than let's choose
# the one closest to midpoint 0.5, allowing the plants to decrease or increase
dplyr::mutate(difference = dplyr::if_else(n < 0.5, 0.5 - n, n - 0.5),
n = round(n, digits = 2)) |>
dplyr::slice_min(n = 1, order_by = difference, with_ties = F) |>
# now just reduce number of species to a sensible amount for visualizing
dplyr::arrange(-n, Species) |>
head(n = 10) |>
select(Species, Nest, Frequency = n) |>
kableExtra::kbl() |>
kableExtra::kable_classic(full_width = F, html_font = "Cambria")
quarter <- 0.25*0.25
half <- (0.5*0.5) - quarter
mid <- (1*1) - half -quarter
vals <- data.frame(
quarter = 1/quarter, # species found here are 16 times more 'abundant' than those in largest quadrats
half = 1/half, # species found here are 5.3 times more 'abundant' than those in the largest quadrat.
mid = 1/mid, # species found here are 1.3 times more 'abundant' than those in the largest quadrat.
full = 1 # constant, they remain 1
) %>%
t() %>%
data.frame() %>%
rownames_to_column() %>%
setNames(., c('quadrat', 'constant'))
# for each quad level, divide by the number of species within it?? /
quadrat = c('quarter', 'quarter', 'half', 'half', 'half', 'mid', 'mid', 'mid', 'full', 'full', 'full', 'full', 'full')
df <- data.frame(
quadrat = quadrat,
species = c(LETTERS[1:length(quadrat)])
)
rm(to_rarify, rarified)
knitr::opts_chunk$set(echo = F)
knitr::opts_chunk$set(dpi = 300)
knitr::opts_chunk$set(message = F)
knitr::opts_chunk$set(warning = F)
knitr::opts_chunk$set(fig.align="left")
library(tidyverse) # used for data transformations and processes.
library(rstatix) # used for simple statistical analyses.
library(iNEXT) # used for rarefaction analysis.
library(vegan) # used for NMDS
library(sf) # used for making example plots
set.seed(12) # to get similar results from runs of the NMDS analysis
source('functions.R') # load a few small functions for processing the data.
knitr::include_graphics('../images/AIM-plot.png')
knitr::include_graphics('../images/Daubenmire.png')
knitr::include_graphics('../images/StandardQuadrat.png')
knitr::include_graphics('../images/BeltTransect.png')
knitr::include_graphics('../images/nested.png')
knitr::include_graphics('../images/ModifiedWhittaker.png')
knitr::include_graphics('../images/Diversity_Plot.png')
knitr::include_graphics('../images/Nested-inOut.png')
knitr::include_graphics('../images/AgriculturalFunderNews-WisdomMT.jpeg')
knitr::include_graphics('../images/Lanphere.jpg')
knitr::include_graphics('../images/NPS_WeedTreatment.jpg')
knitr::include_graphics('../images/FQI-plots.png')
knitr::include_graphics('../images/FQI-prediction.png')
knitr::include_graphics('../images/FieldActivityQuad.png')
knitr::include_graphics('../images/FieldActivityQuad.png')
knitr::include_graphics('../images/ExampleDataEntry.png')
cvals <- read.csv('../data/Taft1997FQA_Values.csv', skip = 11) %>%
# update some of the species names
mutate(Scientific.Name = case_when(
Scientific.Name == 'Circaea lutetiana v. canadensis' ~ 'Circaea canadensis',
Scientific.Name == 'Polygonum pensylvanicum' ~ 'Persicaria pensylvanica',
Scientific.Name == 'Isopyrum biternatum' ~ 'Enemion biternatum',
Scientific.Name == 'Smilacina racemosa' ~ 'Maianthemum racemosum',
Scientific.Name == 'Aster shortii' ~ 'Symphyotrichum shortii',
Scientific.Name == 'Aster sagittifolius' ~ 'Symphyotrichum urophyllum',
Scientific.Name == 'Eupatorium purpureum' ~ 'Eutrochium purpureum',
.default = as.character(Scientific.Name)
))
data <- read.csv('../data/DataSheet.csv')
data <- left_join(data, cvals, by = c('Species' = 'Scientific.Name')) %>%
mutate(Species = str_trim(Species))
c_vals <- data %>%
group_by(Quadrat) %>%
mutate(
Mcoc = mcoc(C),
FQI = fqi(C),
Site = as.factor(Site),
) %>%
distinct(Site, Quadrat, .keep_all = T) %>%
select(Site, Quadrat, Mcoc, FQI)
rm(cvals)
# we will create a list, each list will be a matrix of the species found
# (rows), and the Plots they were sampled at (columns)
to_rarify <- data %>%
select(Site, Species, Quadrat) %>%
mutate(Presence = 1)  %>%
ungroup() %>%
pivot_wider(names_from = Species, values_from = Presence, values_fill = 0) %>%
select(-Quadrat) %>%
split(., f = .$Site) %>%
purrr::map(., ~ select(., -Site))  %>%
lapply(., as.matrix) %>%
lapply(., t)
rarified <- iNEXT(to_rarify, q=0, datatype = "incidence_raw")
cvals <- read.csv('../data/Taft1997FQA_Values.csv', skip = 11) %>%
# update some of the species names
mutate(Scientific.Name = case_when(
Scientific.Name == 'Circaea lutetiana v. canadensis' ~ 'Circaea canadensis',
Scientific.Name == 'Polygonum pensylvanicum' ~ 'Persicaria pensylvanica',
Scientific.Name == 'Isopyrum biternatum' ~ 'Enemion biternatum',
Scientific.Name == 'Smilacina racemosa' ~ 'Maianthemum racemosum',
Scientific.Name == 'Aster shortii' ~ 'Symphyotrichum shortii',
Scientific.Name == 'Aster sagittifolius' ~ 'Symphyotrichum urophyllum',
Scientific.Name == 'Eupatorium purpureum' ~ 'Eutrochium purpureum',
.default = as.character(Scientific.Name)
))
data <- read.csv('../data/DataSheet.csv')
data <- left_join(data, cvals, by = c('Species' = 'Scientific.Name')) %>%
mutate(Species = str_trim(Species))
c_vals <- data %>%
group_by(Quadrat) %>%
mutate(
Mcoc = mcoc(C),
FQI = fqi(C),
Site = as.factor(Site),
) %>%
distinct(Site, Quadrat, .keep_all = T) %>%
select(Site, Quadrat, Mcoc, FQI)
rm(cvals)
# we will create a list, each list will be a matrix of the species found
# (rows), and the Plots they were sampled at (columns)
to_rarify <- data %>%
select(Site, Species, Quadrat) %>%
mutate(Presence = 1)  %>%
ungroup() %>%
pivot_wider(names_from = Species, values_from = Presence, values_fill = 0) %>%
select(-Quadrat) %>%
split(., f = .$Site) %>%
purrr::map(., ~ select(., -Site))  %>%
lapply(., as.matrix) %>%
lapply(., t)
rarified <- iNEXT(to_rarify, q=0, datatype = "incidence_raw")
ggiNEXT(rarified, type=1, facet.var = "Assemblage") +
labs(
title = 'Rarefaction curve of Species Richness',
x = 'Plots', y = 'Species Richness (q = 0)') +
theme_minimal() +
theme(
legend.position = 'bottom',
plot.title = element_text(hjust = 0.5),
)
rm(to_rarify, rarified)
knitr::opts_chunk$set(echo = F)
knitr::opts_chunk$set(dpi = 300)
knitr::opts_chunk$set(message = F)
knitr::opts_chunk$set(warning = F)
knitr::opts_chunk$set(fig.align="left")
library(tidyverse) # used for data transformations and processes.
library(rstatix) # used for simple statistical analyses.
library(iNEXT) # used for rarefaction analysis.
library(vegan) # used for NMDS
library(sf) # used for making example plots
set.seed(12) # to get similar results from runs of the NMDS analysis
source('functions.R') # load a few small functions for processing the data.
knitr::include_graphics('../images/AIM-plot.png')
knitr::include_graphics('../images/Daubenmire.png')
knitr::include_graphics('../images/StandardQuadrat.png')
knitr::include_graphics('../images/BeltTransect.png')
knitr::include_graphics('../images/nested.png')
knitr::include_graphics('../images/ModifiedWhittaker.png')
knitr::include_graphics('../images/Diversity_Plot.png')
knitr::include_graphics('../images/Nested-inOut.png')
knitr::include_graphics('../images/AgriculturalFunderNews-WisdomMT.jpeg')
knitr::include_graphics('../images/Lanphere.jpg')
knitr::include_graphics('../images/NPS_WeedTreatment.jpg')
knitr::include_graphics('../images/FQI-plots.png')
knitr::include_graphics('../images/FQI-prediction.png')
knitr::include_graphics('../images/FieldActivityQuad.png')
knitr::include_graphics('../images/FieldActivityQuad.png')
knitr::include_graphics('../images/ExampleDataEntry.png')
cvals <- read.csv('../data/Taft1997FQA_Values.csv', skip = 11) %>%
# update some of the species names
mutate(Scientific.Name = case_when(
Scientific.Name == 'Circaea lutetiana v. canadensis' ~ 'Circaea canadensis',
Scientific.Name == 'Polygonum pensylvanicum' ~ 'Persicaria pensylvanica',
Scientific.Name == 'Isopyrum biternatum' ~ 'Enemion biternatum',
Scientific.Name == 'Smilacina racemosa' ~ 'Maianthemum racemosum',
Scientific.Name == 'Aster shortii' ~ 'Symphyotrichum shortii',
Scientific.Name == 'Aster sagittifolius' ~ 'Symphyotrichum urophyllum',
Scientific.Name == 'Eupatorium purpureum' ~ 'Eutrochium purpureum',
.default = as.character(Scientific.Name)
))
data <- read.csv('../data/DataSheet.csv')
data <- left_join(data, cvals, by = c('Species' = 'Scientific.Name')) %>%
mutate(Species = str_trim(Species))
c_vals <- data %>%
group_by(Quadrat) %>%
mutate(
Mcoc = mcoc(C),
FQI = fqi(C),
Site = as.factor(Site),
) %>%
distinct(Site, Quadrat, .keep_all = T) %>%
select(Site, Quadrat, Mcoc, FQI)
rm(cvals)
# we will create a list, each list will be a matrix of the species found
# (rows), and the Plots they were sampled at (columns)
to_rarify <- data %>%
select(Site, Species, Quadrat) %>%
mutate(Presence = 1)  %>%
ungroup() %>%
pivot_wider(names_from = Species, values_from = Presence, values_fill = 0) %>%
select(-Quadrat) %>%
split(., f = .$Site) %>%
purrr::map(., ~ select(., -Site))  %>%
lapply(., as.matrix) %>%
lapply(., t)
rarified <- iNEXT(to_rarify, q=0, datatype = "incidence_raw")
ggiNEXT(rarified, type=1, facet.var = "Assemblage") +
labs(
title = 'Rarefaction curve of Species Richness',
x = 'Plots', y = 'Species Richness (q = 0)') +
theme_minimal() +
theme(
legend.position = 'bottom',
plot.title = element_text(hjust = 0.5),
)
rm(to_rarify, rarified)
## Generate Box Plots of data and results
tg <- ToothGrowth %>%
filter(dose < 2) %>%
mutate(dose = as.factor(dose))
fqi_p <- wilcox_test(tg, FQI ~ Site, paired = FALSE, conf.level = 0.1)
fqi_p <- wilcox_test(tg, len ~ dose, paired = FALSE, conf.level = 0.1)
fqi_r <- wilcox_effsize(tg, len ~ dose, paired = FALSE)
meanC_p <- wilcox_test(tg, len ~ dose, paired = FALSE)
meanC_r <- wilcox_effsize(tg, len ~ dose, paired = FALSE)
fqi <- ggplot(tg, aes(x = dose, y = len, fill = dose)) +
geom_boxplot(notch = TRUE) +
theme_minimal() +
labs(
title = 'FQI values between Sites',
y = 'Floristic Quality Index', x = 'Site',
caption = bquote(
paste(
'Strong evidence (',
italic(p), ' = ',
.(round(fqi_p$p, 5)),
', CI = 95%) was found that the sites (',
italic(n), '= ',
.(fqi_p$n1),
') differ greatly (effect size (r) = ',
.(round(fqi_r$effsize, 2)),
') in their FQI scores.')
)
) +
theme(
legend.position = "none",
plot.title = element_text(hjust = 0.5),
plot.caption = element_text(hjust = 0)
)
meanC  <- ggplot(tg, aes(x = dose, y = len, fill = dose)) +
geom_boxplot(notch = TRUE) +
theme_minimal() +
labs(
title = 'Mean C values between Sites',
y = 'Mean C', x = 'Site',
caption = bquote(
paste(
'Strong evidence (',
italic(p), ' = ',
.(round(meanC_p$p, 5)),
', CI = 95%) was found that the sites (',
italic(n), '= ',
.(meanC_p$n1),
') differ greatly (effect size (r) = ',
.(round(meanC_r$effsize, 2)),
') in their Mean C scores.')
)
) +
theme(
legend.position = "none",
plot.title = element_text(hjust = 0.5),
plot.caption = element_text(hjust = 0)
)
cowplot::plot_grid(fqi, meanC,
labels = c('FQI', 'Mean C'), label_size = 12, ncol = 1)
rm(fqi, fqi_p, fqi_r, meanC, meanC_p, meanC_r, c_vals)
data |>
dplyr::filter(Nest <= 4) |>
dplyr::ungroup() |>
dplyr::group_by(Species) |>
dplyr::count(Nest) |> # count how many times each species was found in a nest level
dplyr::group_by(Species) |>
dplyr::mutate(n = n/9) |> # divide the number of observations by the number of plots sampled. .
filter(Nest > 0, n > 0.2 & n < 0.8) |> # we want the plants to show up in from 0.2-0.8 of nests.
# if we have more than one Nest size which meets the standard, than let's choose
# the one closest to midpoint 0.5, allowing the plants to decrease or increase
dplyr::mutate(difference = dplyr::if_else(n < 0.5, 0.5 - n, n - 0.5),
n = round(n, digits = 2)) |>
dplyr::slice_min(n = 1, order_by = difference, with_ties = F) |>
# now just reduce number of species to a sensible amount for visualizing
dplyr::arrange(-n, Species) |>
head(n = 10) |>
select(Species, Nest, Frequency = n) |>
kableExtra::kbl() |>
kableExtra::kable_classic(full_width = F, html_font = "Cambria")
quarter <- 0.25*0.25
half <- (0.5*0.5) - quarter
mid <- (1*1) - half -quarter
